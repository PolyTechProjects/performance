# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI

on:
  push:
    branches:
      - '**'
      - '!master'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn package -DskipTests

    - name: Upload jar
      uses: actions/upload-artifact@v4
      with:
          name: performance-app-jar
          path: ./target/*SNAPSHOT.jar

  dockerize:
    needs: build

    runs-on: ubuntu-latest
    steps:
      - name: Decode WG_FILE
        uses: mobiledevops/secret-to-file-action@v1
        with:
          base64-encoded-secret: ${{ secrets.WG_FILE }}
          filename: "wg0.conf"
          working-directory: "${{ github.workspace }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: kon1ch1wa
          password: ${{ secrets.TOKEN_PUBLISH_PACKAGE }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout
        uses: actions/checkout@v3

      - name: Download jar
        uses: actions/download-artifact@v4
        with:
          name: performance-app-jar

      - name: Show current directory and list files
        run: |
          echo "Current directory:"
          pwd
          echo "Files in directory:"
          ls -l
          
      - name: Build multiplatform docker image and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/kon1ch1wa/performance:latest
          build-args: USER_RATE_KEY=${{ secrets.USER_RATE_KEY }}